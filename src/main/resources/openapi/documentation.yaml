openapi: 3.0.0
info:
  title: Frogdream API
  version: 0.1.4
paths:
  /bank/cards:
    get:
      summary: Retrieve user cards
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /bank/cards/{id}:
    get:
      summary: Retrieve a specific card
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update card details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPatchRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /bank/cards/{id}/transfer:
    post:
      summary: Transfer funds between cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: target
          in: query
          required: true
          schema:
            type: integer
        - name: amount
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /players/{id}:
    get:
      summary: Retrieve player details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDetailsResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /players/{id}/cards:
    get:
      summary: Retrieve player cards
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /@me:
    get:
      summary: Retrieve authenticated player details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDetailsResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /top:
    get:
      summary: Retrieve top players
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopEntry'
  /skin:
    put:
      summary: Update player skin
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vote/{id}:
    post:
      summary: Vote for a player
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Card:
      type: object
      properties:
        _id:
          type: integer
        balance:
          type: integer
        player:
          type: string
        name:
          type: string
        locked:
          type: boolean
        expiresAt:
          type: integer
        color:
          $ref: '#/components/schemas/CardColor'
    CardPatchRequest:
      type: object
      properties:
        name:
          type: string
        color:
          $ref: '#/components/schemas/CardColor'
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    PlayerDetailsResponse:
      type: object
      properties:
        nickName:
          type: string
        skin:
          type: string
        head:
          type: string
        premium:
          type: boolean
        playTime:
          type: integer
        description:
          type: string
        roles:
          type: array
          items:
            type: string
        isBanned:
          type: boolean
    CardInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
    TopEntry:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
    CardColor:
      type: object
      properties:
        value:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []